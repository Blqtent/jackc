
class Buffer {
	field Array buffer;
	field int size;
	field int pos;

	constructor Buffer new(int initial) {
		let buffer = Array.new(initial);
		let size = initial;
		let pos = 0;
		return this;
	}
	
	method void dispose() {
		do buffer.dispose();
		do Memory.deAlloc(this);
	}

	method int getAt(int p) {
		return buffer[p];
	}

	method void setAt(int p, int data) {
		do checkSize(p);
		let buffer[p] = data;
/*
		do Output.printString("AAA");
		do Output.printInt(size);
		do Output.println();
*/
		return;
	}

	method void append(int data) {
		do checkSize(pos);
		let buffer[pos] = data;
		let pos = pos + 1;
		return;
	}

	method void checkSize(int idx) {
		var Array b;
		var int i;
		var int ns;
		if (idx > (size - 1)) {
			let ns = size + idx + 32;
			let b = Array.new(ns);
			let i = 0;
			while (i < size) {
				let b[i] = buffer[i];
				let i = i + 1;
			}
			let size = ns;
			do buffer.dispose();
			let buffer = b;
		}
		return;
	}		

	method int getSize() {
		return size;
	}
}
