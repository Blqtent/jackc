class Const {
	function Hash getHash() {
		var String v;
		var Hash h;
		var int i;
		let h = Hash.new(256, null);
		let v = String.new(8);
		let i = 0;
		do v.setCharAt(1, 0);
		while (i < 128) {
			do v.setCharAt(0, 187);
			do h.add(v, 187);
			let i = i + 1;
		}
		do h.add("invalid", C.INVALID());
		do h.add("null", C.NULL());
		do h.add("none", C.NONE());
		do h.add("keyword", C.KEYWORD());
		do h.add("symbol", C.SYMBOL());
		do h.add("identifier", C.IDENTIFIER());
		do h.add("int_const", C.INT_CONST());
		do h.add("string_const", C.STRING_CONST());
		do h.add("class", C.CLASS());
		do h.add("method", C.METHOD());
		do h.add("function", C.FUNCTION());
		do h.add("constructor", C.CONSTRUCTOR());
		do h.add("callback", C.CALLBACK());
		do h.add("int", C.INT());
		do h.add("boolean", C.BOOLEAN());
		do h.add("char", C.CHAR());
		do h.add("void", C.VOID());
		do h.add("var", C.VAR());
		do h.add("static", C.STATIC());
		do h.add("field", C.FIELD());
		do h.add("let", C.LET());
		do h.add("do", C.DO());
		do h.add("if", C.IF());
		do h.add("else", C.ELSE());
		do h.add("while", C.WHILE());
		do h.add("return", C.RETURN());
		do h.add("true", C.TRUE());
		do h.add("false", C.FALSE());
		do h.add("null", C.NULL());
		do h.add("this", C.THIS());
		do h.add("asm", C.ASM());
		do h.add("plus", C.PLUS());
		do h.add("minus", C.MINUS());
		do h.add("multiply", C.MULTIPLY());
		do h.add("div", C.DIV());
		do h.add("and", C.AND());
		do h.add("or", C.OR());
		do h.add("greater", C.GREATER());
		do h.add("less", C.LESS());
		do h.add("equal", C.EQUAL());
		do h.add("root", C.ROOT());
		do h.add("expr", C.EXPR());
		do h.add("call", C.CALL());
		do h.add("classo", C.CLASSO());
		do h.add("args", C.ARGS());
		do h.add("varname", C.VARNAME());
		do h.add("array", C.ARRAY());
		do h.add("assign", C.ASSIGN());
		do h.add("statements", C.STATEMENTS());
		do h.add("params", C.PARAMS());
		do h.add("vars", C.VARS());
		do h.add("type", C.TYPE());
		do h.add("string", C.STRING());
		do h.add("arrayvar", C.ARRAYVAR());
		do h.add("paran", C.PARAN());
		do h.add("unaryop", C.UNARYOP());
		do h.add("expr", C.EXPR());
		do h.add("op", C.OP());
		do h.add("next_free_constant", C.NEXT_FREE_CONSTANT());
		do v.dispose();
		return h;
	}
}
