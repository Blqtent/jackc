
class JackAnalyser {
	field File src;
	field Xml x;
	field JackTokenizer t;
	field CompilationEngine comp;

	constructor JackAnalyser new() {
		let src = null;
		let x = Xml.new();
		let t = JackTokenizer.new(x);
		let comp = CompilationEngine.new(t);
		return this;
	}

	method void dispose() {
		do t.dispose();
		do x.dispose();
		if (comp) {
			do comp.dispose();
		}
		do Memory.deAlloc(this);
		return;
	}

	method boolean compile(String src_) {
		var File dst;
		let src = File.new(src_, false);
		let dst = File.new("test.xml", true);
		do x.clear();
		do t.init(src, false);
		do comp.init(src, false);
		do comp.compileClass(t, dst);

		do x.dump(dst);

		do dst.dispose();
		do src.dispose();
		let src = null;
		//if (String2.compare("ctests/lib/ext/Gif.jack", src_)=0) {
		//	do Sys.halt();
		//}
		return true;
	}

	method boolean link(String dir) {

		return true;
	}
}

